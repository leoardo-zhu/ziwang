{"version":3,"sources":["util/http.js","api/api.js","stores/reducer.js","stores/store.js","pages/Userinfo/components/DrawerForm.js","pages/Userinfo/components/Avatar.js","pages/UserFork/index.js","pages/Userinfo/index.js","pages/UserWatch/index.js","serviceWorker.js","index.js","containers/App.js"],"names":["headers","Headers","Content-Type","fetchPromise","url","method","params","Promise","resolve","reject","fetch","body","JSON","stringify","then","response","json","flag","fetchGet","token","Cookies","get","updateUserInfoApi","info","defaultState","user","store","createStore","state","arguments","length","undefined","action","type","value","window","__REDUX_DEVTOOLS_EXTENSION__","DrawerForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeUserInfo","setState","objectSpread","getState","showDrawer","visible","onClose","onSubmit","_this$props$form","props","form","validateFields","getFieldsValue","userInfo","birthday","format","err","dispatch","message","success","catch","error","subscribe","getFieldDecorator","react_default","a","createElement","href","className","onClick","drawer","title","width","maskClosable","es_form","labelCol","span","wrapperCol","Item","label","username","mobile","initialValue","nickname","rules","required","input","autoComplete","sex","es_radio","Group","email","moment","date_picker","job","address","TextArea","autosize","minRows","maxRows","style","position","left","bottom","borderTop","padding","background","textAlign","es_button","marginRight","React","Component","ModifyAvatar","modify","_this2","modal","onCancel","cancelText","Avatar_UploadAvatar","UploadAvatar","_React$Component2","_getPrototypeOf2","_this3","_len","args","Array","_key","apply","concat","loading","handleChange","file","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","inherits","createClass","key","uploadButton","icon","upload","name","listType","showUploadList","onChange","src","alt","UserInfo","data","Drawer","Form","create","avatar","size","Avatar","listData","i","push","description","content","IconText","_ref","text","UserFork","es_list","itemLayout","pagination","page","console","log","pageSize","dataSource","footer","renderItem","item","actions","UserFork_IconText","extra","Meta","count","fakeDataUrl","UserWatch","initLoading","list","getData","reqwest","contentType","res","onLoadMore","toConsumableArray","map","results","dispatchEvent","Event","_this$state","loadMore","marginTop","height","lineHeight","skeleton","active","last","Boolean","location","hostname","match","locale","ReactDOM","render","locale_provider","zh_CN","breadcrumbItems","breadcrumb","react_router_dom","basename","menu","defaultSelectedKeys","mode","exact","to","divider","orientation","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6bAGMA,EAAU,IAAIC,QAAQ,CAAEC,eAAgB,qBAExCC,EAAe,SAACC,EAAKC,EAAQC,GAAd,OACjB,IAAIC,QAAQ,SAACC,EAASC,GAClBC,MANQ,2BAMQN,EAAK,CACjBC,OAAQA,EACRL,QAASA,EACTW,KAAMC,KAAKC,UAAUP,KACtBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SACxBF,KAAK,SAAAC,GAAQ,OAAIA,EAASE,KAAOT,EAAQO,GAAYN,EAAOM,QAGnEG,EAAW,SAACd,EAAKE,GAAN,OAAiBH,EAAaC,EAAK,MAAOE,aCZrDa,SAAQC,EAAQC,IAAI,aAAe,oMAInCC,EAAoB,SAAAC,GAAI,ODYIpB,ECZS,QDYS,MCZAoB,aCP9CC,EAAe,CACjBC,KAAM,ICOKC,EALDC,YDCC,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,MAAoB,oBAAhBC,EAAOC,KACA,CACHR,KAAMO,EAAOE,OAGI,iBAAhBF,EAAOC,KACLD,EAAOE,MAGXN,GCTPO,OAAOC,8BAAgCD,OAAOC,iDCqJnCC,cAjJX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQJI,eAAiB,kBAAMP,EAAKQ,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAmBb,EAAMsB,cATlCV,EAWdW,WAAa,WACTX,EAAKQ,SAAS,CACVI,SAAS,KAbHZ,EAiBda,QAAU,WACNb,EAAKQ,SAAS,CAAEI,SAAS,KAlBfZ,EAqBdc,SAAW,WAAM,IAAAC,EAC8Bf,EAAKgB,MAAMC,KAA9CC,EADKH,EACLG,eAAgBC,EADXJ,EACWI,eAElBC,EAAQnB,OAAAQ,EAAA,EAAAR,CAAA,GAAQD,EAAKV,MAAMH,KAASgC,KAGpCzB,EAAS,CACXC,KAAM,kBACNC,MAAMK,OAAAQ,EAAA,EAAAR,CAAA,GACCmB,EADF,CAEDC,SAAUD,EAASC,SAASC,OAAO,iBAI3CJ,EAAe,SAAAK,GACNA,GACDvC,EAAkBoC,GACb5C,KAAK,WACFwB,EAAKa,UACLzB,EAAMoC,SAAS9B,GACf+B,IAAQC,QAAQ,gDAElBC,MAAM,SAAAJ,GAAG,OAAIE,IAAQG,MAAML,EAAIE,cAzC7CzB,EAAKV,MAALW,OAAAQ,EAAA,EAAAR,CAAA,CACIW,SAAS,GACNxB,EAAMsB,YAEbtB,EAAMyC,UAAU7B,EAAKO,gBANXP,wEAgDL,IACG8B,EAAsB3B,KAAKa,MAAMC,KAAjCa,kBACA3C,EAASgB,KAAKb,MAAdH,KAKR,OACI4C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,qBAAqBC,UAAU,YAAYC,QAASjC,KAAKQ,YAAjE,4BAGAoB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIC,MAAM,2BACNC,MAAO,IACP1B,QAASV,KAAKU,QACdD,QAAST,KAAKb,MAAMsB,QACpB4B,cAAc,GAEdT,EAAAC,EAAAC,cAACQ,EAAA,EAhBU,CACnBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAeRZ,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACbf,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBAAiBhD,EAAK4D,WAE1ChB,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,sBACbf,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBAAiBhD,EAAK6D,SAE1CjB,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACZhB,EAAkB,WAAY,CAC3BmB,aAAc9D,EAAK+D,SACnBC,MAAO,CACH,CACIC,UAAU,EACV3B,QAAS,4DALpBK,CAQEC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,aAAa,UAG3BvB,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACZhB,EAAkB,MAAO,CAAEmB,aAAc9D,EAAKoE,KAAO,GAArDzB,CACGC,EAAAC,EAAAC,cAACuB,EAAA,EAAMC,MAAP,KACI1B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAO5D,MAAO,GAAd,UACAmC,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAO5D,MAAO,GAAd,UACAmC,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAO5D,MAAO,GAAd,mBAKZmC,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACZhB,EAAkB,QAAS,CACxBmB,aAAc9D,EAAKuE,MACnBP,MAAO,CACH,CACIxD,KAAM,QACN8B,QAAS,kEALpBK,CAQEC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,aAAa,UAG3BvB,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACZhB,EAAkB,WAAY,CAAEmB,aAAcU,IAAOxE,EAAKkC,WAA1DS,CAAuEC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,QAE5E7B,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACZhB,EAAkB,MAAO,CAAEmB,aAAc9D,EAAK0E,KAA9C/B,CAAqDC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,aAAa,UAE9EvB,EAAAC,EAAAC,cAACQ,EAAA,EAAKI,KAAN,CAAWC,MAAM,gBACZhB,EAAkB,UAAW,CAAEmB,aAAc9D,EAAK2E,SAAlDhC,CACGC,EAAAC,EAAAC,cAACoB,EAAA,EAAMU,SAAP,CAAgBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAI7DnC,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CACHC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACR/B,MAAO,OACPgC,UAAW,oBACXC,QAAS,YACTC,WAAY,OACZC,UAAW,UAGf3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQvC,QAASjC,KAAKU,QAASsD,MAAO,CAAES,YAAa,IAArD,gBAGA7C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQvC,QAASjC,KAAKW,SAAUnB,KAAK,WAArC,0BAxICkF,IAAMC,oCCLzBC,cACF,SAAAA,IAAc,IAAA/E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACV/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,QAKJ6E,OAAS,aAJLhF,EAAKV,MAAQ,CACTsB,SAAS,GAHHZ,wEASL,IAAAiF,EAAA9E,KACGS,EAAYT,KAAKb,MAAjBsB,QACR,OACImB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,KAAGC,KAAK,qBAAqBE,QAAS,kBAAM6C,EAAKzE,SAAS,CAAEI,SAAS,MAArE,4BACAmB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACI3C,MAAO,IACP3B,QAASA,EACTuE,SAAU,kBAAMF,EAAKzE,SAAS,CAAEI,SAAS,KACzCwE,WAAW,gBAEXrD,EAAAC,EAAAC,cAACoD,EAAD,eArBOR,IAAMC,WCIjC,IDgCA,IAAMQ,EAAY,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAxF,OAAAC,EAAA,EAAAD,CAAAE,KAAAmF,GAAA,QAAAI,EAAAnG,UAAAC,OAAAmG,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAtG,UAAAsG,GAAA,OAAAJ,EAAAxF,OAAAG,EAAA,EAAAH,CAAAE,MAAAqF,EAAAvF,OAAAI,EAAA,EAAAJ,CAAAqF,IAAAhF,KAAAwF,MAAAN,EAAA,CAAArF,MAAA4F,OAAAJ,MACdrG,MAAQ,CACJ0G,SAAS,GAFCP,EAKdQ,aAAe,SAAAhH,GACc,cAArBA,EAAKiH,KAAKC,OAIW,SAArBlH,EAAKiH,KAAKC,QAjBtB,SAAmBC,EAAKC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,kBAAMH,EAASC,EAAOG,UACtDH,EAAOI,cAAcN,GAgBbO,CAAU1H,EAAKiH,KAAKU,cAAe,SAAAC,GAAQ,OACvCpB,EAAKjF,SAAS,CACVqG,WACAb,SAAS,MARjBP,EAAKjF,SAAS,CAAEwF,SAAS,KAPnBP,EAAA,OAAAxF,OAAA6G,EAAA,EAAA7G,CAAAqF,EAAAC,GAAAtF,OAAA8G,EAAA,EAAA9G,CAAAqF,EAAA,EAAA0B,IAAA,SAAApH,MAAA,WAsBV,IAAMqH,EACFlF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAMQ,KAAKb,MAAM0G,QAAU,UAAY,SAC7CjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,WAGA0E,EAAa1G,KAAKb,MAAlBuH,SACR,OACI9E,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACIC,KAAK,SACLC,SAAS,eACTlF,UAAU,kBACVmF,gBAAgB,EAChB5H,OAAO,mDACP6H,SAAUpH,KAAK8F,cAEdY,EAAW9E,EAAAC,EAAAC,cAAA,OAAKuF,IAAKX,EAAUY,IAAI,WAAcR,OAtChD3B,EAAA,CAAiBT,IAAMC,WA6C1BC,IEzEM2C,sBACjB,SAAAA,IAAc,IAAA1H,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuH,IACV1H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyH,GAAApH,KAAAH,QAiBJI,eAAiB,WACbP,EAAKQ,SAASpB,EAAMsB,aAjBpBV,EAAKV,MAAQF,EAAMsB,WACnBtB,EAAMyC,UAAU7B,EAAKO,gBAHXP,mFAMM,IAAAiF,EAAA9E,KNbKvB,EAAQ,eAAAmH,OAAgBlH,IMc5BL,KAAK,SAAAC,GAClB,IAAMU,EAAO,CAAEA,KAAMV,EAASkJ,MACxBjI,EAAS,CACXC,KAAM,eACNC,MAAOT,GAEXC,EAAMoC,SAAS9B,GACfuF,EAAKzE,SAASrB,sCAQb,IACGA,EAASgB,KAAKb,MAAdH,KAEFyI,EAASC,IAAKC,QAALD,CAAc9H,GAEzBwD,EAAM,eAKV,OAHiB,IAAbpE,EAAKoE,IAAWA,EAAM,SACJ,IAAbpE,EAAKoE,MAAWA,EAAM,UAG3BxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,4BAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQC,KAAM,IAAKR,IAAKrI,EAAK4I,SAC7BhG,EAAAC,EAAAC,cAACgG,EAAD,OAEJlG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAA,8BAAO9C,EAAK4D,UAEZhB,EAAAC,EAAAC,cAAA,oCAAQ9C,EAAK6D,QAEbjB,EAAAC,EAAAC,cAAA,8BAAO9C,EAAK+D,UAEZnB,EAAAC,EAAAC,cAAA,8BAAOsB,GAEPxB,EAAAC,EAAAC,cAAA,8BAAO9C,EAAKuE,OAAS,sBAErB3B,EAAAC,EAAAC,cAAA,8BAAO9C,EAAKkC,UAAY,sBAExBU,EAAAC,EAAAC,cAAA,8BAAO9C,EAAK0E,KAAO,sBAEnB9B,EAAAC,EAAAC,cAAA,8BAAO9C,EAAK2E,SAAW,gCA3DTe,IAAMC,8BDLtCoD,EAAW,GACRC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAASE,KAAK,CACVlG,KAAM,oBACNI,MAAK,yBAAAyD,OAA2BoC,GAChCJ,OAAQ,mEACRM,YACI,yFACJC,QACI,kMAIZ,IAAMC,EAAW,SAAAC,GAAA,IAAG7I,EAAH6I,EAAG7I,KAAM8I,EAATD,EAASC,KAAT,OACb1G,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAMA,EAAMwE,MAAO,CAAES,YAAa,KACvC6D,IAIYC,mLAGb,OACI3G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,4BAGAJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACIC,WAAW,WACXZ,KAAK,QACLa,WAAY,CACRtB,SAAU,SAAAuB,GACNC,QAAQC,IAAIF,IAEhBG,SAAU,GAEdC,WAAYhB,EACZiB,OACIpH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBADJ,gBAIJmH,WAAY,SAAAC,GAAI,OACZtH,EAAAC,EAAAC,cAAC0G,EAAA,EAAK9F,KAAN,CACImE,IAAKqC,EAAK/G,MACVgH,QAAS,CACLvH,EAAAC,EAAAC,cAACsH,EAAD,CAAU5J,KAAK,SAAS8I,KAAK,QAC7B1G,EAAAC,EAAAC,cAACsH,EAAD,CAAU5J,KAAK,SAAS8I,KAAK,QAC7B1G,EAAAC,EAAAC,cAACsH,EAAD,CAAU5J,KAAK,UAAU8I,KAAK,OAElCe,MACIzH,EAAAC,EAAAC,cAAA,OACIM,MAAO,IACPkF,IAAI,OACJD,IAAI,yEAIZzF,EAAAC,EAAAC,cAAC0G,EAAA,EAAK9F,KAAK4G,KAAX,CACI1B,OAAQhG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQP,IAAK6B,EAAKtB,SAC1BzF,MAAOP,EAAAC,EAAAC,cAAA,KAAGC,KAAMmH,EAAKnH,MAAOmH,EAAK/G,OACjC+F,YAAagB,EAAKhB,cAErBgB,EAAKf,oBA5CIzD,IAAMC,wDEnBtC4E,EAAQ,EACRC,EAAW,sCAAA5D,OAAyC2D,EAAzC,qCAGIE,6MACjBtK,MAAQ,CACJuK,aAAa,EACb7D,SAAS,EACT2B,KAAM,GACNmC,KAAM,MAWVC,QAAU,SAAA1D,GACN2D,IAAQ,CACJlM,IAAK6L,EACLhK,KAAM,OACN5B,OAAQ,MACRkM,YAAa,mBACbvI,QAAS,SAAAwI,GACL7D,EAAS6D,SAIrBC,WAAa,WACTnK,EAAKQ,SAAS,CACVwF,SAAS,EACT8D,KAAM9J,EAAKV,MAAMqI,KAAK5B,OAAO9F,OAAAmK,EAAA,EAAAnK,CAAI,IAAI2F,MAAM8D,IAAQW,IAAI,iBAAO,CAAErE,SAAS,EAAMoB,KAAM,SAEzFpH,EAAK+J,QAAQ,SAAAG,GACT,IAAMvC,EAAO3H,EAAKV,MAAMqI,KAAK5B,OAAOmE,EAAII,SACxCtK,EAAKQ,SACD,CACImH,OACAmC,KAAMnC,EACN3B,SAAS,GAEb,WAIInG,OAAO0K,cAAc,IAAIC,MAAM,mGArC3B,IAAAvF,EAAA9E,KAChBA,KAAK4J,QAAQ,SAAAG,GACTjF,EAAKzE,SAAS,CACVqJ,aAAa,EACblC,KAAMuC,EAAII,QACVR,KAAMI,EAAII,6CAqCb,IAAAG,EACkCtK,KAAKb,MAApCuK,EADHY,EACGZ,YAAa7D,EADhByE,EACgBzE,QAAS8D,EADzBW,EACyBX,KACxBY,EACDb,GAAgB7D,EAWb,KAVAjE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CACHO,UAAW,SACXiG,UAAW,GACXC,OAAQ,GACRC,WAAY,SAGhB9I,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQvC,QAASjC,KAAKgK,YAAtB,iBAGZ,OACIpI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,4BAGAJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACIxG,UAAU,qBACV6D,QAAS6D,EACTjB,WAAW,aACX8B,SAAUA,EACVxB,WAAYY,EACZV,WAAY,SAAAC,GAAI,OACZtH,EAAAC,EAAAC,cAAC0G,EAAA,EAAK9F,KAAN,CAAWyG,QAAS,CAACvH,EAAAC,EAAAC,cAAA,iBAAaF,EAAAC,EAAAC,cAAA,mBAC9BF,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAU/C,QAAM,EAACzF,OAAO,EAAO0D,QAASqD,EAAKrD,QAAS+E,QAAM,GACxDhJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAK9F,KAAK4G,KAAX,CACI1B,OACIhG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQP,IAAI,qEAEhBlF,MAAOP,EAAAC,EAAAC,cAAA,KAAGC,KAAK,sBAAsBmH,EAAKjC,KAAK4D,MAC/C3C,YAAY,0FAEhBtG,EAAAC,EAAAC,cAAA,mCArFO4C,IAAMC,kDCCzBmG,QACW,cAA7BpL,OAAOqL,SAASC,UAEe,UAA7BtL,OAAOqL,SAASC,UAEhBtL,OAAOqL,SAASC,SAASC,MACvB,qGCRNzH,IAAO0H,OAAO,SAEdC,IAASC,OACLxJ,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAgBH,OAAQI,MACpB1J,EAAAC,EAAAC,cCLO,WAEb,IAAMyJ,EAAkB,CACtB3J,EAAAC,EAAAC,cAAC0J,GAAA,EAAW9I,KAAZ,CAAiBmE,IAAI,QACnBjF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,yBAAR,iBAEFH,EAAAC,EAAAC,cAAC0J,GAAA,EAAW9I,KAAZ,CAAiBmE,IAAI,QAArB,iBAKF,OACEjF,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAQC,SAAS,SACf9J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEbJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,KAAaD,IAGf3J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEC,oBAAqB,CAAC,KACtBC,KAAK,UAELjK,EAAAC,EAAAC,cAAC6J,GAAA,EAAKjJ,KAAN,CAAWmE,IAAI,KACbjF,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAASK,OAAK,EAACC,GAAG,KAAInK,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAK,SAAjC,6BAEFoC,EAAAC,EAAAC,cAAC6J,GAAA,EAAKjJ,KAAN,CAAWmE,IAAI,KACbjF,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAASM,GAAG,SAAQnK,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAK,SAA/B,6BAEFoC,EAAAC,EAAAC,cAAC6J,GAAA,EAAKjJ,KAAN,CAAWmE,IAAI,KACbjF,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAASM,GAAG,UAASnK,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAK,UAAhC,6BAEFoC,EAAAC,EAAAC,cAACkK,GAAA,EAAD,CAASC,YAAY,QAArB,kCACArK,EAAAC,EAAAC,cAAC6J,GAAA,EAAKjJ,KAAN,CAAWmE,IAAI,KACbjF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAK,SADb,4BAGAoC,EAAAC,EAAAC,cAAC6J,GAAA,EAAKjJ,KAAN,CAAWmE,IAAI,KACbjF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMvH,KAAK,aADb,8BAOJoC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAOJ,OAAK,EAACK,KAAK,IAAIC,UAAW7E,IACjC3F,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW7D,IAC/B3G,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW3C,SD5CpC,OAEJ4C,SAASC,eAAe,SDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpO,KAAK,SAAAqO,GACjCA,EAAaC","file":"static/js/main.a1ef487a.chunk.js","sourcesContent":["\nconst baseUrl = 'http://10.129.235.5:9000'\n\nconst headers = new Headers({ 'Content-Type': 'application/json' })\n\nconst fetchPromise = (url, method, params) =>\n    new Promise((resolve, reject) => {\n        fetch(baseUrl + url, {\n            method: method,\n            headers: headers,\n            body: JSON.stringify(params)\n        }).then(response => response.json())\n            .then(response => response.flag ? resolve(response) : reject(response))\n    })\n\nconst fetchGet = (url, params) => fetchPromise(url, 'GET', params)\n\nconst fetchPost = (url, params) => fetchPromise(url, 'POST', params)\n\nconst fetchPut = (url, params) => fetchPromise(url, 'PUT', params)\n\nconst fetchDelete = (url, params) => fetchPromise(url, 'DELETE', params)\n\nexport {\n    fetchGet, fetchPost, fetchPut, fetchDelete\n} ","import { fetchGet, fetchPut } from '../util/http'\nimport Cookies from 'js-cookie'\n\nconst token = Cookies.get('TokenKey') || 'eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxMTMyNjIyOTA1NjI1MTUzNTM2Iiwic3ViIjoi5bCP6b6Z6b6ZIiwiaWF0IjoxNTYxMzY5ODk3LCJleHAiOjE1NjMyOTU3MzAsInJvbGUiOiJhZG1pbiJ9.EQur_1AEgL8eCuQvuJYnu7KZqIgdr4NFL6CKxG6ShSI'\n\nconst getUserInfoApi = () => fetchGet(`/user/token/${token}`)\n\nconst updateUserInfoApi = info => fetchPut('/user', info)\n\nconst getUserWatchApi = () => fetchGet('/')\n\nexport {\n    getUserInfoApi,\n    updateUserInfoApi\n}","const defaultState = {\n    user: {}\n}\n\nexport default (state = defaultState, action) => {\n    if (action.type === 'change_userInfo') {\n        return {\n            user: action.value\n        }\n    } \n    else if (action.type === 'set_userInfo') {\n        return action.value\n    }\n\n    return state\n}","import { createStore } from 'redux'\nimport reducer from './reducer'\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store","import React from 'react'\nimport { Drawer, Form, Button, Input, DatePicker, Radio, message } from 'antd'\n\nimport { updateUserInfoApi } from '../../../api/api'\nimport store from '../../../stores/store'\nimport moment from 'moment'\n\n\nclass DrawerForm extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            visible: false,\n            ...store.getState()\n        }\n        store.subscribe(this.changeUserInfo)\n    }\n\n    changeUserInfo = () => this.setState({ ...store.getState() })\n\n    showDrawer = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n    onClose = () => {\n        this.setState({ visible: false })\n    }\n\n    onSubmit = () => {\n        const { validateFields, getFieldsValue } = this.props.form\n\n        const userInfo = { ...this.state.user, ...getFieldsValue() }\n\n\n        const action = {\n            type: 'change_userInfo',\n            value: {\n                ...userInfo,\n                birthday: userInfo.birthday.format('YYYY-MM-DD')\n            }\n        }\n\n        validateFields(err => {\n            if (!err) {\n                updateUserInfoApi(userInfo)\n                    .then(() => {\n                        this.onClose()\n                        store.dispatch(action)\n                        message.success('修改信息成功！')\n                    }\n                    ).catch(err => message.error(err.message))\n            }\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { user } = this.state\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 18 }\n        }\n        return (\n            <div>\n                <a href=\"javascript:void(0)\" className=\"edit-info\" onClick={this.showDrawer}>\n                    修改资料\n                </a>\n                <Drawer\n                    title=\"修改资料\"\n                    width={350}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    maskClosable={false}\n                >\n                    <Form {...formItemLayout}>\n                        <Form.Item label='账号'>\n                            <span className='ant-form-text'>{user.username}</span>\n                        </Form.Item>\n                        <Form.Item label='手机号'>\n                            <span className='ant-form-text'>{user.mobile}</span>\n                        </Form.Item>\n                        <Form.Item label='昵称'>\n                            {getFieldDecorator('nickname', {\n                                initialValue: user.nickname,\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '昵称是必须要填的喔'\n                                    }\n                                ]\n                            })(<Input autoComplete='off' />)\n                            }\n                        </Form.Item>\n                        <Form.Item label='性别'>\n                            {getFieldDecorator('sex', { initialValue: user.sex || 3 })(\n                                <Radio.Group>\n                                    <Radio value={1}>男</Radio>\n                                    <Radio value={2}>女</Radio>\n                                    <Radio value={3}>保密</Radio>\n                                </Radio.Group>\n                            )\n                            }\n                        </Form.Item>\n                        <Form.Item label='邮箱'>\n                            {getFieldDecorator('email', {\n                                initialValue: user.email,\n                                rules: [\n                                    {\n                                        type: 'email',\n                                        message: '请输入正确的邮箱格式'\n                                    }\n                                ]\n                            })(<Input autoComplete='off' />)\n                            }\n                        </Form.Item>\n                        <Form.Item label='生日'>\n                            {getFieldDecorator('birthday', { initialValue: moment(user.birthday) })(<DatePicker />)}\n                        </Form.Item>\n                        <Form.Item label='职业'>\n                            {getFieldDecorator('job', { initialValue: user.job })(<Input autoComplete='off' />)}\n                        </Form.Item>\n                        <Form.Item label='地址'>\n                            {getFieldDecorator('address', { initialValue: user.address })(\n                                <Input.TextArea autosize={{ minRows: 2, maxRows: 6 }} />)\n                            }\n                        </Form.Item>\n                    </Form>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: 0,\n                            bottom: 0,\n                            width: '100%',\n                            borderTop: '1px solid #e9e9e9',\n                            padding: '10px 16px',\n                            background: '#fff',\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                            取消\n                        </Button>\n                        <Button onClick={this.onSubmit} type=\"primary\">\n                            保存\n                        </Button>\n                    </div>\n                </Drawer>\n            </div>\n        )\n    }\n}\n\nexport default DrawerForm","import React from 'react'\nimport { Modal, Icon, Upload } from 'antd';\n\nclass ModifyAvatar extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            visible: false\n        }\n    }\n    modify = () => {\n\n    }\n    render() {\n        const { visible } = this.state\n        return (\n            <div className=\"avatar\">\n                <a href='javascript:void(0)' onClick={() => this.setState({ visible: true })}>修改头像</a>\n                <Modal\n                    width={300}\n                    visible={visible}\n                    onCancel={() => this.setState({ visible: false })}\n                    cancelText='取消'\n                >\n                    <UploadAvatar />\n                </Modal>\n            </div>\n\n        )\n    }\n}\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\n\nconst UploadAvatar = class extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    render() {\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        const { imageUrl } = this.state;\n        return (\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                onChange={this.handleChange}\n            >\n                {imageUrl ? <img src={imageUrl} alt=\"avatar\" /> : uploadButton}\n            </Upload>\n        );\n    }\n\n}\n\nexport default ModifyAvatar","import React from 'react'\n\nimport { getUserWatchApi } from '../../api/api'\nimport './style.scss'\nimport { List, Icon, Avatar, Empty } from 'antd';\n\nconst listData = [];\nfor (let i = 0; i < 15; i++) {\n    listData.push({\n        href: 'http://ant.design',\n        title: `ant design part Index ${i}`,\n        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        description:\n            'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n        content:\n            'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n    });\n}\n\nconst IconText = ({ type, text }) => (\n    <span>\n        <Icon type={type} style={{ marginRight: 8 }} />\n        {text}\n    </span>\n);\n\nexport default class UserFork extends React.Component {\n\n    render() {\n        return (\n            <div className=\"user-fork\">\n                <div className=\"title\">\n                    我的收藏\n                </div>\n                <List\n                    itemLayout=\"vertical\"\n                    size=\"large\"\n                    pagination={{\n                        onChange: page => {\n                            console.log(page);\n                        },\n                        pageSize: 2,\n                    }}\n                    dataSource={listData}\n                    footer={\n                        <div>\n                            <b>ant design</b> footer part\n      </div>\n                    }\n                    renderItem={item => (\n                        <List.Item\n                            key={item.title}\n                            actions={[\n                                <IconText type=\"star-o\" text=\"156\" />,\n                                <IconText type=\"like-o\" text=\"156\" />,\n                                <IconText type=\"message\" text=\"2\" />,\n                            ]}\n                            extra={\n                                <img\n                                    width={272}\n                                    alt=\"logo\"\n                                    src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                                />\n                            }\n                        >\n                            <List.Item.Meta\n                                avatar={<Avatar src={item.avatar} />}\n                                title={<a href={item.href}>{item.title}</a>}\n                                description={item.description}\n                            />\n                            {item.content}\n                        </List.Item>\n                    )}\n                />\n            </div>\n        )\n\n\n    }\n}","import React from 'react'\n\nimport { Form, Avatar } from 'antd';\nimport DrawerForm from './components/DrawerForm'\nimport ModifyAvatar from './components/Avatar'\nimport store from '../../stores/store'\n\nimport { getUserInfoApi } from '../../api/api'\n\nimport './style.scss'\n\nexport default class UserInfo extends React.Component {\n    constructor() {\n        super()\n        this.state = store.getState()\n        store.subscribe(this.changeUserInfo)\n    }\n\n    componentDidMount() {\n        getUserInfoApi().then(response => {\n            const user = { user: response.data }\n            const action = {\n                type: 'set_userInfo',\n                value: user\n            }\n            store.dispatch(action)\n            this.setState(user)\n        })\n    }\n\n    changeUserInfo = () => {\n        this.setState(store.getState())\n    }\n\n    render() {\n        const { user } = this.state\n\n        const Drawer = Form.create()(DrawerForm)\n\n        let sex = '保密'\n\n        if (user.sex === 1) sex = '男'\n        else if (user.sex === 2) sex = '女'\n\n        return (\n            <div className='user-info'>\n                <div className=\"title\">\n                    个人资料\n                </div>\n                <div className=\"info\">\n                    <div className=\"photo\">\n                        <Avatar size={100} src={user.avatar} />\n                        <ModifyAvatar />\n                    </div>\n                    <div className=\"user\">\n                        <Drawer />\n                        <p>账号：{user.username}</p>\n\n                        <p>手机号：{user.mobile}</p>\n\n                        <p>昵称：{user.nickname}</p>\n\n                        <p>性别：{sex}</p>\n\n                        <p>邮箱：{user.email || '未设置'}</p>\n\n                        <p>生日：{user.birthday || '未设置'}</p>\n\n                        <p>职业：{user.job || '未设置'}</p>\n\n                        <p>地址：{user.address || '未设置'}</p>\n\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\n\n\n","import React from 'react'\n\nimport './style.scss'\nimport { Button,Skeleton, Avatar, List } from 'antd';\n\nimport reqwest from 'reqwest';\n\nconst count = 3;\nconst fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\n\n\nexport default class UserWatch extends React.Component {\n    state = {\n        initLoading: true,\n        loading: false,\n        data: [],\n        list: [],\n    }\n    componentDidMount() {\n        this.getData(res => {\n            this.setState({\n                initLoading: false,\n                data: res.results,\n                list: res.results,\n            });\n        });\n    }\n    getData = callback => {\n        reqwest({\n            url: fakeDataUrl,\n            type: 'json',\n            method: 'get',\n            contentType: 'application/json',\n            success: res => {\n                callback(res);\n            },\n        });\n    };\n    onLoadMore = () => {\n        this.setState({\n            loading: true,\n            list: this.state.data.concat([...new Array(count)].map(() => ({ loading: true, name: {} }))),\n        });\n        this.getData(res => {\n            const data = this.state.data.concat(res.results);\n            this.setState(\n                {\n                    data,\n                    list: data,\n                    loading: false,\n                },\n                () => {\n                    // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n                    // In real scene, you can using public method of react-virtualized:\n                    // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n                    window.dispatchEvent(new Event('resize'));\n                },\n            );\n        });\n    };\n    render() {\n        const { initLoading, loading, list } = this.state;\n        const loadMore =\n            !initLoading && !loading ? (\n                <div\n                    style={{\n                        textAlign: 'center',\n                        marginTop: 12,\n                        height: 32,\n                        lineHeight: '32px',\n                    }}\n                >\n                    <Button onClick={this.onLoadMore}>loading more</Button>\n                </div>\n            ) : null;\n        return (\n            <div className=\"user-watch\">\n                <div className=\"title\">\n                    我的关注\n                </div>\n                <List\n                    className=\"demo-loadmore-list\"\n                    loading={initLoading}\n                    itemLayout=\"horizontal\"\n                    loadMore={loadMore}\n                    dataSource={list}\n                    renderItem={item => (\n                        <List.Item actions={[<a>edit</a>, <a>more</a>]}>\n                            <Skeleton avatar title={false} loading={item.loading} active>\n                                <List.Item.Meta\n                                    avatar={\n                                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                                    }\n                                    title={<a href=\"https://ant.design\">{item.name.last}</a>}\n                                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                                />\n                                <div>content</div>\n                            </Skeleton>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss'\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nReactDOM.render(\n    <LocaleProvider locale={zh_CN}>\n        <App />\n    </LocaleProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport UserInfo from '../pages/Userinfo'\nimport UserFork from '../pages/UserFork'\nimport UserWatch from '../pages/UserWatch'\nimport './App.scss'\nimport { Breadcrumb, Menu, Icon, Divider } from \"antd\";\n\n\nexport default function App() {\n\n  const breadcrumbItems = [\n    <Breadcrumb.Item key=\"home\">\n      <a href=\"http://47.101.39.237/\">首页</a>\n    </Breadcrumb.Item>,\n    <Breadcrumb.Item key=\"user\">\n        用户\n    </Breadcrumb.Item>\n  ]\n\n  return (\n    <Router basename='/user'>\n      <div className=\"wrapper\">\n        {/* 头部导航 */}\n        <header>\n          <Breadcrumb>{breadcrumbItems}</Breadcrumb>\n        </header>\n        {/* 双列布局  */}\n        <div className=\"content\">\n          {/* 左侧边导航栏 */}\n          <div className=\"left-menu\">\n            <Menu\n              defaultSelectedKeys={['1']}\n              mode=\"inline\"\n            >\n              <Menu.Item key=\"1\">\n                <NavLink exact to='/'><Icon type=\"home\" />个人资料</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <NavLink to='/fork'><Icon type=\"fork\" />我的收藏</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <NavLink to='/watch'><Icon type=\"heart\" />我的关注</NavLink>\n              </Menu.Item>\n              <Divider orientation='left'>未开发部份</Divider>\n              <Menu.Item key=\"4\">\n                <Icon type=\"user\" />我的博客\n              </Menu.Item>\n              <Menu.Item key=\"5\">\n                <Icon type=\"download\" />我的下载\n              </Menu.Item>\n            </Menu>\n\n          </div>\n\n          <div className=\"right-menu\">\n            <Route exact path='/' component={UserInfo} />\n            <Route path='/fork' component={UserFork} />\n            <Route path='/watch' component={UserWatch} />\n          </div>\n        </div>\n      </div>\n    </Router >\n  )\n}"],"sourceRoot":""}